<?php
/**
 * MySQL: Foreign keys (внешние ключи): CASCADE, SET NULL, RESTRICT, NO ACTON
 */

/**
 * RESTRICT - не позволяет добавлять и удалять записи
 * означает, что нельзя редактировать значение ключа или удалять строки из родительской таблицы, пока есть
 * соответсвующие внешние ключи в дочерних таблицах (это правило является правилом по умолчанию).
 *
 *
 * CASCADE - если удаляется/редактируется запись в одной таблице, такое же поведение в связанной таблице
 * означает распространение действия родительской таблицы на дочерние: то есть, если значение ключа
 * в родительской таблице измениться, то оно автоматически (без специальных запросов) измениться и в дочерних таблицах.
 * Если связанная запись родительской таблицы обновлена или удалена, и мы хотим чтобы соответсвующие записи в
 * таблицах потомках также были обновлены или удалены. Что происходит с записью в родительской таблицу, тоже самое
 * произойдет с записью в дочерних таблицах. Однако не забывайте, что здесь можно легко попасть в ловушку бесконечного
 * цикла.
 * SET NULL: если запись в родительской таблице обновлена или удалена, и мы хотим чтобы записи в дочерней таблице
 * некоторым значениям было присвоено NULL (если поле таблицы это позволяет)
 *
 * NO ACTION: смотри RESTRICT
 *
 * SET DEFAULT: на данный момент эта команда распознается парсером, но движек InnoDB на нее не реагирует.
 *
 * ANALYZE TABLE (перестраивает дерево индексов, не позволяя выраждаться ему в список, такое может быть если мы,
 * скажем, вставляем упорядоченные данные, тогда эффективность операции поиска записи составит не 0(logn), а 0(n).
 * Замечу также, что не всегда следует выполнять команду ANALYZE TABLE на production сервере, т.к. на время её
 * выполнения MySQL лочит таблицы MyISAM (read lock), InnoDB (write lock) ),
 *
 * OPTIMIZE TABLE (дефрагментация файла данных. Полезно при большом удалении записей из таблицы).
 * Когда мы удаляем запись из талицы на самом деле она не удаляется, а помечается как удаленная.
 * Чем больше записей в БД тем дольше идет выборка.
 * Чтобы полностью удалить запись, нужно ее дефрагментировать
 *
 * REPAIR TABLE `имя таблицы` - Иногда таблицы ломаются. Чтобы их починить, запускаем  REPAIR TABLE
 *
 * Например загрузили новые прайсы - потом сделали OPTIMIZE TABLE
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */